What is HTTP?

HTTP stands for hypertext transfer protocol, and it is using in almost all web applications. 
HTTP is the method computers and servers use to request and send information.
When someone navigates to amazon.com or any other websites on their computer, Their web browser sends an HTTP request to the Amazon servers for the content that show on the page. Then, Amazon servers send HTTP responses with the text, images, and formatting that the browser displays to the user.
What is HTTP/1.1?
The first version of HTTP was created in 1997. This first version of HTTP was called HTTP/1.1. This version is still in use on the web.

How HTTP/1.1 works?
The browser communicates with the server. The browser and server interchange messages, the browser requesting the images, fonts and other resources needed with separate requests, and the server, sending them as responses.
The result will be as, The bunch of data through many connections causes congestion, and the page load speed slows down. To overcome the problem of too many requests being sent, and to make the best use of HTTP/1, Developers have used inlining, concatenation and image spriting. Fortunately for them, puzzling over the speed of performance will largely be a thing of the past when HTTP/2 comes.
What is HTTP/2?
In 2015, a new version of HTTP called HTTP/2 was created.
HTTP/2 solves several problems that the creators of HTTP/1.1 did not expect.
HTTP/2 is much faster and more efficient than HTTP/1.1.
How HTTP/2 works?
HTTP/2 Protocol is Binary protocols that consume less bandwidth, are more efficiently parsed and are less error prone than the textual protocols used by HTTP/1.1. 

Multiplexing:
HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it.
HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource.
HTTP/2 does this by splitting data into binary code messages and numbering these messages so that the client knows which stream each binary message belongs to.

Server push: 
Typically, a server only serves content to a client device if the client asks for it.
However, this approach is not always practical for modern web pages.
HTTP/2 solves this problem by allowing a server to "push" content to a client before the client asks for it.

Header compression: 
Small files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 compress HTTP messages to make them smaller.
HTTP/2 uses a smarter compression technique called HPACK to remove unnecessary details in HTTP header packets.
This removes some bytes from each HTTP packet.
With so many HTTP packets needed to load just one webpage, all those bytes quickly add up, making the loading faster.
